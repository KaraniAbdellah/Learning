// What is Angular
/*
    Framework for SPA
    built by Google
    has huge community
*/


// Benefits
/*
    Faster Code Generation with (CLI)
    Unit-tests ready
*/


// Get Started
/* 
    sudo npm install -g @angular/cli --> Angular CLI
    ng new <project-name> 
    --> this folder was not actually created in disk --> use an option
*/


// What are Angular Comonenets
/*
    @Component: Decorator
    Each Componenets Has An Attribute, so in css you can find:
        h1[_ngcontent-ng-c2283532919] {color: red;}

    RouterOutlet: It's used to dynamically load different components based on the current URL route.
*/
@Component({
    selector: 'app-root',
    imports: [RouterOutlet],
    // templateUrl: './home.html',
    // template: './home.html',
    // styleUrl: "./css/style.css",
    template: '<h1>Hello World</h1>',
    styles: [`
      h1 {
        color: red;
      }
      `]
})


// Creating Components
/*
    We Can Create Just by just By CLI:
        nh generate component header || ng g c header
        ng g c component/header
        ng g c component/header --dry-run --> header does not create in my project
        
        NOTE: The "dryRun" flag means no changes were made.
    
    For Importing Component Should Be in: 
        --> imports in parent componets "html file" || templace
        --> import also in imports: []
*/
@Component({
  selector: 'app-root',
  imports: [RouterOutlet, HomeComponent, HeaderComponent],
  // templateUrl: './app.component.html',
  // template: './home.html',
  // styleUrl: "./css/style.css",
  template: `
    <app-header />
    <app-home />
  `
})


// Angular Data-Buinding
/*
    In other words, Data Binding means sharing data between
        components to view and view to component.
    
    For This: 
        --> use Signal function imported from "@angular/core" --> it is like user useState()
        --> Simple Varaible
    
    Choose: --> Use Signal() is modern method
*/
-- First Example With Varaible
export class HomeComponent {
  myVar = "Hello Home Page";
}
<main>
    <h1>{{myVar}}</h1>
</main>

-- Second Example With Signa()
export class HomeComponent {
  myVar = Signal("Hello Home Page)";
}
<main>
    <h1>{{myVar()}}</h1>
</main>



// Implment More Com inside another comp and passing the data
/*

*/
// Method 1:
--> in home.com.ts
export class HomeComponent {
  myVar = "Hello Home Page";
  FromHomeMessage = signal("Hello Greeting Componenets");
}
--> in home.com.html
<main>
    <div>
        <h1 class="text-yellow-400">{{myVar}}</h1>
    </div>
    <app-greeter [message]="'Hello Gretter Component!!'"></app-greeter>
    <app-greeter [message]="FromHomeMessage()"></app-greeter>
    <app-counter></app-counter>
</main>
--> in greeter.com.ts
export class GreeterComponent {
  message = input('Default Message'); // we can recieve something from outside
  // This Message Is Signal Also
}


// Event Listaners
/*
    Ther is A lot of Events --> w3 school
*/
export class HomeComponent {
  keyUpHandler(event: KeyboardEvent) {
    event.preventDefault();
    console.log(event.type);
  }
  myVar = 'Hello Home Page';
  FromHomeMessage = signal('Hello Greeting Componenets');
}
<input type="text" (keyup)="keyUpHandler($event)"/>


// Counter application
export class CounterComponent {
  counter = signal(0);
  dec() {
    this.counter.update((value) => --value);
    this.counter.update((value) => value--); // does not want to work
    // this.counter.set(this.counter() - 1);
  }
  incr() {
    // this.counter.set(this.counter() + 1);
    this.counter.update((value) => value + 1);
  }
  reset() {
    this.counter.set(0);
  }
}


// Routing in Angular
/*
  --> <RouterOutlet />: a router-outlet is a directive that acts as a placeholder in a component's template.
  --> Directives: are classes that add additional behavior to elements in your Angular applications.
  --> Add to Each Componenets RouterModule --> since angular 17
*/
export const routes: Routes = [
  {
    path: '',
    pathMatch: 'full',
    // loadComponent: async () => {
    //   const module = await import('./home/home.component');
    //   return module.HomeComponent;
    // },
    component: HomeComponent
  },
  {
    path: 'supplier',
    component: SuppliersComponent
  },
];
<div class="content">
      <router-outlet></router-outlet> // all componets will be here
</div>


// Angular Services
/*
  --> Used to sperate angular app data and functions (HTTP calls)
  --> it is way of working
  --> ng g services services/home/home
      - will create services folder inside it you can find home file
*/
// home.service.ts
@Injectable({
  providedIn: 'root', // meaning this avaibale in any component
  // if we remove it means this will be available just in home component
})
export class HomeService {
  constructor() {}
}

// home.component.ts
@Component({
  selector: 'app-home',
  imports: [RouterModule],
  templateUrl: './home.component.html',
  styleUrl: './home.component.css',
  providers: [HomeService]
})











